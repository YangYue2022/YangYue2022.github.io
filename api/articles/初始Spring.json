{"title":"初始Spring","uid":"1d8367bae1fc3e1c30eeebdf6d0e5cc0","slug":"初始Spring","date":"2023-02-28T16:00:00.000Z","updated":"2023-03-01T08:15:22.430Z","comments":true,"path":"api/articles/初始Spring.json","keywords":null,"cover":[],"content":"<h1 id=\"Spring-Boot-核心作用\"><a href=\"#Spring-Boot-核心作用\" class=\"headerlink\" title=\"Spring Boot 核心作用\"></a>Spring Boot 核心作用</h1><ul>\n<li>起步依赖</li>\n</ul>\n<p>​ 使用<a href=\"https://start.spring.io/;\">Spring Initializr</a>进行项目配置：aop thymeleaf web devtools</p>\n<ul>\n<li><p>自动配置</p>\n</li>\n<li><p>端点监控</p>\n</li>\n</ul>\n<h1 id=\"Spring-IoC\"><a href=\"#Spring-IoC\" class=\"headerlink\" title=\"Spring IoC\"></a>Spring IoC</h1><ul>\n<li><p>Inversion of Control -控制反转，是一种面向对象编程的设计思想</p>\n</li>\n<li><p>Dependency Injection -依赖注入，IoC 的实现方式</p>\n</li>\n<li><p>IoC Container -IoC 容器，实现依赖注入的关键，本质是一个工厂</p>\n<p><img src=\"D:\\MyHexoBlog\\source\\img\\image-20230301105850892.png\" alt=\"image-20230301105850892\"></p>\n</li>\n</ul>\n<h1 id=\"Spring-amp-Bean\"><a href=\"#Spring-amp-Bean\" class=\"headerlink\" title=\"Spring&amp;Bean\"></a>Spring&amp;Bean</h1><h2 id=\"配置类\"><a href=\"#配置类\" class=\"headerlink\" title=\"配置类\"></a>配置类</h2><p>底层自动创建 spring 容器</p>\n<p>ApplicationContext 即 Spring 容器，这个接口继承于 BeanFactor（Spring 容器的顶层接口）</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CommunityApplication</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CommunityApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>@SpringBootApplication 表明这是一个配置类</p>\n<hr>\n<p>进入 SpringBootApplication.java</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootConfiguration</span>\n<span class=\"token annotation punctuation\">@EnableAutoConfiguration</span> <span class=\"token comment\">//自动配置</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>excludeFilters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token annotation punctuation\">@Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CUSTOM</span><span class=\"token punctuation\">,</span> classes <span class=\"token operator\">=</span> <span class=\"token class-name\">TypeExcludeFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token annotation punctuation\">@Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CUSTOM</span><span class=\"token punctuation\">,</span> classes <span class=\"token operator\">=</span> <span class=\"token class-name\">AutoConfigurationExcludeFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//扫描配置类所在包以及子包下的bean</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>bean 内有相应注解才会被扫描</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Controller</span> <span class=\"token comment\">//请求</span>\n<span class=\"token class-name\">Service</span> <span class=\"token comment\">//业务</span>\n<span class=\"token class-name\">Repository</span> <span class=\"token comment\">//数据库访问</span>\n<span class=\"token class-name\">Component</span> <span class=\"token comment\">//通用</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>均由 Component 实现</p>\n<hr>\n<h2 id=\"getBean\"><a href=\"#getBean\" class=\"headerlink\" title=\"getBean()\"></a>getBean()</h2><p>一个类想实现 Spring 容器，要实现 ApplicationContextAware 接口</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">CommunityApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//设置配置类</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CommunityApplicationTests</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationContextAware</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationContext<span class=\"token operator\">=</span>applicationContext<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token annotation punctuation\">@Test</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>applicationContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">AlphaDao alphadao&#x3D;applicationContext.getBean(AlphaDao.class); &#x2F;&#x2F;按类型获取bean<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"如果-Bean-冲突了怎么办？\"><a href=\"#如果-Bean-冲突了怎么办？\" class=\"headerlink\" title=\"如果 Bean 冲突了怎么办？\"></a>如果 Bean 冲突了怎么办？</h2><p>在要获取的 Bean 加入</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>@Primary</p></blockquote>\n<p>或者给 Bean 起名字</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AlphaHibernate\"</span><span class=\"token punctuation\">)</span>\n\nalphadao<span class=\"token operator\">=</span>applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AlphaHibernate\"</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">AlphaDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"Bean-管理\"><a href=\"#Bean-管理\" class=\"headerlink\" title=\"Bean 管理\"></a>Bean 管理</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span>  <span class=\"token class-name\">AlphaService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"实例化AlphaService\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@PostConstruct</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"初始化AlphaService\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@PreDestroy</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"销毁AlphaService\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>默认 Bean 是单例模式的，想要同样的类出现多个不同的 bean，需要注释</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Scope</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prototype\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//默认singleton</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<p>如果想要导入第三方的 bean 怎么办？</p>\n<p>创建一个 config 文件</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AlphaConfig</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SimpleDateFormat</span> <span class=\"token function\">simpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"更简单的方法？-gt-依赖注入\"><a href=\"#更简单的方法？-gt-依赖注入\" class=\"headerlink\" title=\"更简单的方法？-&gt;依赖注入\"></a>更简单的方法？-&gt;依赖注入</h1><p>将 AlphaDao 注入 alphaDao</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@Autowired\n\tprivate AlphaDao alphaDao;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>指定注入的 bean</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@Autowired\n@Qualifier(&quot;AlphaHibernate&quot;)\nprivate AlphaDao alphaDao;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n","text":"Spring Boot 核心作用 起步依赖 ​ 使用Spring Initializr进行项目配置：aop thymeleaf web devtools 自动配置 端点监控 Spring IoC Inversion of Control -控制反转，是一种面向对象编程的设计思想 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring-Boot-%E6%A0%B8%E5%BF%83%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">Spring Boot 核心作用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring-IoC\"><span class=\"toc-text\">Spring IoC</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring-amp-Bean\"><span class=\"toc-text\">Spring&amp;Bean</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E7%B1%BB\"><span class=\"toc-text\">配置类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#getBean\"><span class=\"toc-text\">getBean()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E6%9E%9C-Bean-%E5%86%B2%E7%AA%81%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F\"><span class=\"toc-text\">如果 Bean 冲突了怎么办？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Bean-%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Bean 管理</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%9F-gt-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">更简单的方法？-&gt;依赖注入</span></a></li></ol>","author":{"name":"Serena","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>QQ：1424935869</b>","socials":{"github":"https://github.com/YangYue2022","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://m.weibo.cn/","zhihu":"","csdn":"https://blog.csdn.net/Serena2000?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"maven配置","uid":"cf26a6b1cbc6c769e4f860791ff7a888","slug":"maven配置","date":"2023-02-28T08:36:26.000Z","updated":"2023-02-28T08:51:03.562Z","comments":true,"path":"api/articles/maven配置.json","keywords":null,"cover":[],"text":"maven 命令使用maven 作用：构建项目，管理 jar 包技术文档：Maven – Maven in 5 Minutes (apache.org) 配置中心仓库，镜像仓库 查看版本 mvn -version 以 maven 自带模板建立一个项目（没有 class） mvn ...","link":"","photos":[],"count_time":{"symbolsCount":443,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"环境配置","slug":"环境配置","count":1,"path":"api/tags/环境配置.json"}],"author":{"name":"Serena","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>QQ：1424935869</b>","socials":{"github":"https://github.com/YangYue2022","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://m.weibo.cn/","zhihu":"","csdn":"https://blog.csdn.net/Serena2000?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}